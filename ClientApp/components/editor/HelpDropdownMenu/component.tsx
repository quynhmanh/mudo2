import './index.scss';
import { ReactComponent as BellIcon } from './icons/bell.svg';
import { ReactComponent as MessengerIcon } from './icons/messenger.svg';
import { ReactComponent as CaretIcon } from './icons/caret.svg';
import { ReactComponent as PlusIcon } from './icons/plus.svg';
import { ReactComponent as CogIcon } from './icons/cog.svg';
import { ReactComponent as ChevronIcon } from './icons/chevron.svg';
import { ReactComponent as ArrowIcon } from './icons/arrow.svg';
import { ReactComponent as BoltIcon } from './icons/bolt.svg';

import React, { useState, useEffect, useRef } from 'react';
import { CSSTransition } from 'react-transition-group';

function App() {
    return (
        <Navbar>
            <NavItem icon={<CaretIcon />}>
                <DropdownMenu></DropdownMenu>
            </NavItem>
        </Navbar>
    );
}

function Navbar(props) {
    return (
        <div className="navbar">
            <ul className="navbar-nav">{props.children}</ul>
        </div>
    );
}

function NavItem(props) {
    const [open, setOpen] = useState(false);

    return (
        <li className="nav-item">
            <button className="icon-button" onClick={() => setOpen(!open)}>
                Tr·ª£ gi√∫p <span style={{ marginLeft: "8px", width: "5px",}}>{open ? " X" : " ?"}</span>
            </button>

            {open && props.children}
        </li>
    );
}

function DropdownMenu() {
    const [activeMenu, setActiveMenu] = useState('main');
    const [menuHeight, setMenuHeight] = useState(null);
    const dropdownRef = useRef(null);

    useEffect(() => {
        setMenuHeight(dropdownRef.current?.firstChild.offsetHeight + 20)
    }, [])

    function calcHeight(el) {
        const height = el.offsetHeight;
        setMenuHeight(height + 20);
    }

    function DropdownItem(props) {
        return (
            <a className="menu-item" onClick={() => props.goToMenu && setActiveMenu(props.goToMenu)}>
                {/* <span className="icon-button">{props.leftIcon}</span> */}
                {props.children}
                {/* <span className="icon-right">{props.rightIcon}</span> */}
            </a>
        );
    }

    return (
        <div className="dropdown" style={{ height: menuHeight }} ref={dropdownRef}>

            <CSSTransition
                in={activeMenu === 'main'}
                timeout={500}
                classNames="menu-primary"
                unmountOnExit
                onEnter={calcHeight}>
                <div className="menu">
                    <DropdownItem
                        leftIcon={<CogIcon />}
                        rightIcon={<ChevronIcon />}
                        goToMenu="settings">
                        H∆∞·ªõng d·∫´n v·ªÅ Draft
          </DropdownItem>
                    <DropdownItem
                        leftIcon="ü¶ß"
                        rightIcon={<ChevronIcon />}>
                        B√°o c√°o s·ª± c·ªë
          </DropdownItem>

                </div>
            </CSSTransition>

            <CSSTransition
                in={activeMenu === 'animals2'}
                timeout={500}
                classNames="menu-primary"
                unmountOnExit
                onEnter={calcHeight}>
                <div className="menu">
                    <DropdownItem
                        leftIcon={<CogIcon />}
                        rightIcon={<ChevronIcon />}
                        goToMenu="settings">
                        H∆∞·ªõng d·∫´n v·ªÅ Draft cac
          </DropdownItem>
                    <DropdownItem
                        leftIcon="ü¶ß"
                        rightIcon={<ChevronIcon />}>
                        B√°o c√°o s·ª± c·ªë
          </DropdownItem>

                </div>
            </CSSTransition>

            <CSSTransition
                in={activeMenu === 'tutorial'}
                timeout={500}
                classNames="menu-primary"
                unmountOnExit
                onEnter={calcHeight}>
                <div className="menu">
                    <div
                        style={{
                            padding: "0 15px",
                        }}
                    >
                        <h3 
                            style={{
                                margin: "5px 0 15px",
                                fontWeight: 700,
                            }}
                        >H∆∞·ªõng d·∫´n: T·∫°o thi·∫øt k·∫ø ƒë·∫ßu ti√™n c·ªßa b·∫°n</h3>
                        <p>Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi Draft! ƒê·ªÉ b·∫Øt ƒë·∫ßu thi·∫øt k·∫ø:</p>

                        <ol className="dywODg fFOiLQ fP4ZCw">
                            <li className="zFmx4A fFOiLQ fP4ZCw">
                                Ch·ªçn m·ªôt{" "}
                                <a className="ovm4pQ" href="#" draggable="false" role="button">
                                    m·∫´u
              </a>
              .
            </li>
                            <li className="zFmx4A fFOiLQ fP4ZCw">
                                <a className="ovm4pQ" href="#" draggable="false" role="button">
                                    Th√™m ·∫£nh
              </a>{" "}
              ho·∫∑c{" "}
                                <a className="ovm4pQ" href="#" draggable="false" role="button">
                                    t·∫£i ·∫£nh c·ªßa ch√≠nh b·∫°n l√™n
              </a>
              .
            </li>
                            <li className="zFmx4A fFOiLQ fP4ZCw">
                                <a className="ovm4pQ" href="#" draggable="false" role="button">
                                    Thay th·∫ø
              </a>{" "}
              vƒÉn b·∫£n hi·ªán c√≥ ho·∫∑c{" "}
                                <a className="ovm4pQ" href="#" draggable="false" role="button">
                                    th√™m
              </a>{" "}
              th√¥ng ƒëi·ªáp c·ªßa b·∫°n.
            </li>
                            <li className="zFmx4A fFOiLQ fP4ZCw">
                                T·∫£i xu·ªëng ho·∫∑c in thi·∫øt k·∫ø b·∫±ng c√°ch nh·∫•p v√†o{" "}
                                <a className="ovm4pQ" href="#" draggable="false" role="button">
                                    <b>ƒêƒÉng</b>
                                </a>{" "}
              ho·∫∑c{" "}
                                <a className="ovm4pQ" href="#" draggable="false" role="button">
                                    <b>T·∫£i xu·ªëng</b>
                                </a>
              .
            </li>
                        </ol>
                    </div>
                </div>
            </CSSTransition>

            <CSSTransition
                in={activeMenu === 'saveDesign'}
                timeout={500}
                classNames="menu-primary"
                unmountOnExit
                onEnter={calcHeight}>
                <div className="menu">
                    <div
                        style={{
                            padding: "0 15px",
                        }}
                    >
                        <h3 
                            style={{
                                margin: "5px 0 15px",
                                fontWeight: 700,
                            }}>L∆∞u thi·∫øt k·∫ø </h3>
                        <p>Draft t·ª± ƒë·ªông l∆∞u c√°c thi·∫øt k·∫ø khi b·∫°n l√†m vi·ªác. Xem thanh menu ph√≠a tr√™n c√πng trong tr√¨nh bi√™n t·∫≠p ƒë·ªÉ bi·∫øt tr·∫°ng th√°i l∆∞u thi·∫øt k·∫ø:</p>

                        <ul class="dywODg fFOiLQ fP4ZCw"><li class="zFmx4A fFOiLQ fP4ZCw"><b>ƒêang l∆∞u...</b> - Thi·∫øt k·∫ø ƒëang trong qu√° tr√¨nh l∆∞u.</li><li class="zFmx4A fFOiLQ fP4ZCw"><b>ƒê√£ l∆∞u m·ªçi thay ƒë·ªïi</b> - N·ªôi dung s·ª≠a g·∫ßn ƒë√¢y ƒë·ªëi v·ªõi thi·∫øt k·∫ø ƒë√£ ƒë∆∞·ª£c l∆∞u.</li><li class="zFmx4A fFOiLQ fP4ZCw"><b>Thay ƒë·ªïi ch∆∞a ƒë∆∞·ª£c l∆∞u</b> - N·ªôi dung s·ª≠a g·∫ßn ƒë√¢y ƒë·ªëi v·ªõi thi·∫øt k·∫ø ch∆∞a ƒë∆∞·ª£c l∆∞u. B·∫°n c√≥ th·ªÉ l∆∞u thi·∫øt k·∫ø theo c√°ch th·ªß c√¥ng b·∫±ng c√°ch nh·∫•p v√†o <b>T·ªáp</b> v√† ch·ªçn <b>L∆∞u</b>. </li><li class="zFmx4A fFOiLQ fP4ZCw"><b>L·ªói khi l∆∞u</b> ho·∫∑c <b>ƒê√£ t·∫°m d·ª´ng l∆∞u </b>- Qu√° tr√¨nh l∆∞u b·ªã gi√°n ƒëo·∫°n do m·∫•t k·∫øt n·ªëi Internet. H√£y ki·ªÉm tra k·∫øt n·ªëi Internet ƒë·ªÉ xem k·∫øt n·ªëi c√≥ nhanh v√† ·ªïn ƒë·ªãnh kh√¥ng.</li></ul>
                        <p class="nqE4Ig fFOiLQ fP4ZCw">B·∫°n c√≥ th·ªÉ t√¨m th·∫•y t·∫•t c·∫£ thi·∫øt k·∫ø ƒë√£ l∆∞u trong tab<b> T·∫•t c·∫£ thi·∫øt k·∫ø </b>c·ªßa trang ch·ªß Draft.</p>
                        <p class="nqE4Ig fFOiLQ fP4ZCw"><b>M·∫πo:</b> B·∫°n c√≥ th·ªÉ xem l·∫°i v√† kh√¥i ph·ª•c <a class="ovm4pQ" href="#" draggable="false" role="button">c√°c phi√™n b·∫£n thi·∫øt k·∫ø tr∆∞·ªõc ƒë√≥</a> v·ªõi ƒëƒÉng k√Ω <b>Draft Pro</b> ho·∫∑c <b>Draft for Enterprise</b>. T√≠nh nƒÉng n√†y c≈©ng √°p d·ª•ng v·ªõi tr·∫°ng th√°i t√†i kho·∫£n <b>Draft cho Gi√°o d·ª•c</b> v√† <b>Draft cho t·ªï ch·ª©c phi l·ª£i nhu·∫≠n</b>.</p>
                        <p class="nqE4Ig fFOiLQ fP4ZCw">N·∫øu b·∫°n mu·ªën l∆∞u thi·∫øt k·∫ø v√†o thi·∫øt b·ªã c·ªßa m√¨nh, nh·∫•p v√†o <b>bi·ªÉu t∆∞·ª£ng ‚§ì</b> ·ªü g√≥c tr√™n c√πng c·ªßa tr√¨nh bi√™n t·∫≠p ƒë·ªÉ <a class="ovm4pQ" href="#" draggable="false" role="button">t·∫£i xu·ªëng thi·∫øt k·∫ø</a>, ho·∫∑c nh·∫•p v√†o <b>ƒêƒÉng</b> ƒë·ªÉ xem c√°c t√πy ch·ªçn ƒëƒÉng c√≥ s·∫µn.</p>
                    </div>
                </div>
            </CSSTransition>

            <CSSTransition
                in={activeMenu === 'settings'}
                timeout={500}
                classNames="menu-secondary"
                unmountOnExit
                onEnter={calcHeight}>
                <div className="menu">
                    {/* <DropdownItem goToMenu="main" leftIcon={<ArrowIcon />}>
            <h2>My Tutorial</h2>
          </DropdownItem> */}
                    <DropdownItem goToMenu="tutorial" leftIcon={<BoltIcon />}>H∆∞·ªõng d·∫´n t·∫°o thi·∫øt k·∫ø ƒë·∫ßu ti√™n c·ªßa b·∫°n</DropdownItem>
                    <DropdownItem goToMenu="saveDesign" leftIcon={<BoltIcon />}>L∆∞u thi·∫øt k·∫ø</DropdownItem>
                    <DropdownItem leftIcon={<BoltIcon />}>T·∫£i thi·∫øt k·∫ø xu·ªëng</DropdownItem>
                </div>
            </CSSTransition>

            <CSSTransition
                in={activeMenu === 'animals'}
                timeout={500}
                classNames="menu-secondary"
                unmountOnExit
                onEnter={calcHeight}>
                <div className="menu">
                    <DropdownItem goToMenu="main" leftIcon={<ArrowIcon />}>
                        <h2>Animals</h2>
                    </DropdownItem>
                    <DropdownItem leftIcon="ü¶ò">Kangaroo</DropdownItem>
                    <DropdownItem leftIcon="üê∏">Frog</DropdownItem>
                    <DropdownItem leftIcon="ü¶ã">Horse?</DropdownItem>
                    <DropdownItem leftIcon="ü¶î">Hedgehog</DropdownItem>
                </div>
            </CSSTransition>

        </div>
    );
}

export default App;
